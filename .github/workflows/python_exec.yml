##  Named of the workflow.
name: python_exec

## Set the trigger policy.
## In this case, the workflow is execute on a `push` event,
## or when a new commit is pushed to the repository
on: [push]

## List the steps to be executed by the workflow
jobs:
  ## Set the name of the job
  build:
    ## Configure the operating system the workflow should run on.
    ## In this case, the job on Ubuntu. Additionally, set a the job
    ## to execute on different Python versions 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [  2.7, '2.x', '3.x',3.5, 3.6, 3.7, 3.8, 'pypy-2.7', 'pypy-3.6', 'pypy-3.7']
    name: Python ${{ matrix.python-version }} sample
    ## Define a sequence of steps to be executed
    steps:
      ## Use the public `checkout` action  in version v2  
      ## to checkout the existing code in the repository
      - uses: actions/checkout@v2
      ## Use the public `setup-python` actoin  in version v2  
      ## to install python on the Ubuntu based environment.
      ## Additionally, it ensures to loop through all 
      ## the defined Python versions.
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      ## Install all necessary dependecies .
      ## For example, pytest and any defined packages within the requirements.txt file if there is one.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install  pytest 
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi 
      - run: python *.py
